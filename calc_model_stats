#!/usr/bin/env python3
'''Calculate model statistics.

Usage: calc_model_stats <input> [<name> <weights>...]

Arguments:

- input: Input data (CSV). The table should contain a column "Model" identifying
the model, and an arbitrary number of other columns to calculate statistics for.
- <name>: Name of weights.
- <weights>: Model weights - the output of model_weights (CSV).
'''

import sys
import pandas
import csv
import numpy as np

if __name__ == '__main__':
	if len(sys.argv) < 4 or len(sys.argv) % 2 != 0:
		sys.stderr.write(sys.modules[__name__].__doc__)
		sys.exit(1)
	input_ = sys.argv[1]
	names = sys.argv[2::2]
	weight_files = sys.argv[3::2]

	d = pandas.read_csv(input_)
	vars_ = list(d.keys())
	vars_.remove('Model')

	out = {}
	out['Type'] = ['simple']
	for var in vars_:
		out[var + ' mean'] = [d[var].mean()]
		out[var + ' std'] = [d[var].std()]
	for name, weight_file in zip(names, weight_files):
		out['Type'] += [name]
		d_w = pandas.read_csv(weight_file)
		weights = {}
		for i, model in enumerate(d_w['Model']):
			weights[model] = d_w['Weight'][i]
		for var in vars_:
			mean = 0
			std = 0
			n = 0
			w = 0
			for i, model in enumerate(d['Model']):
				if model in weights and np.isfinite(d[var][i]):
					mean += weights[model]*d[var][i]
					n += 1
					w += weights[model]
			mean /= w
			for i, model in enumerate(d['Model']):
				if model in weights and np.isfinite(d[var][i]):
					std += weights[model]*(d[var][i] - mean)**2
			std = np.sqrt(std/w)
			out[var + ' mean'] = out.get(var + ' mean', []) + [mean]
			out[var + ' std'] = out.get(var + ' std', []) + [std]

	writer = csv.writer(sys.stdout)
	outkeys = out.keys()
	writer.writerow(outkeys)
	n = len(out['Type'])
	for i in range(n):
		writer.writerow([out[k][i] for k in outkeys])
